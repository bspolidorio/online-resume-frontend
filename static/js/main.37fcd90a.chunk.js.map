{"version":3,"sources":["services/api.ts","styles/GlobalStyles.ts","components/Layout/styles.ts","components/Project/styles.ts","components/Project/index.tsx","components/User/styles.ts","components/User/index.tsx","components/Specialization/styles.ts","components/Specialization/index.tsx","components/Layout/index.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","createGlobalStyle","size","device","mobile","tablet","Grid","styled","div","Container","TitleContainer","ProjectsTitle","h3","Separator","CardsContainer","Card","Project","projects","map","project","className","name","description","href","live","target","rel","code","Header","UserName","h1","Position","h2","AboutMe","AboutLeft","AboutTitle","Email","a","Phone","p","Location","Github","Linkedin","AboutRight","AboutText","User","user","position","email","phone","location","github","aria-hidden","linkedin","about","SpecializationsTitle","SpecializationList","ul","Specialization","specializations","specialization","Layout","users","key","App","useState","setUsers","useEffect","get","then","response","data","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37fcd90a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://online-resume-backend.herokuapp.com\",\r\n});\r\n\r\nexport default api;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n*{\r\n    font-family: 'roboto', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml, body, #root {\r\n    height:100%;\r\n}\r\n\r\n:root {\r\n    --gray: #f3f3f3;\r\n    --darkblue: #2f4154;\r\n    --lightblue: #3b9fc1;\r\n    --white: #fff;\r\n    --black: #000;\r\n  }\r\n`;\r\n\r\nconst size = {\r\n  mobile: \"414px\",\r\n  tablet: \"768px\",\r\n};\r\n\r\nexport const device = {\r\n  mobile: `(max-width: ${size.mobile})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.div`\r\n  max-width: 920px;\r\n  margin: 0 auto;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../styles/GlobalStyles\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px 0px;\r\n  margin: 0 auto;\r\n  background-color: var(--darkblue);\r\n  color: var(--darkblue);\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 50px;\r\n  @media ${device.mobile} {\r\n    padding-left: 0px;\r\n  }\r\n`;\r\n\r\nexport const ProjectsTitle = styled.h3`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  background-color: var(--lightblue);\r\n  width: 150px;\r\n  padding: 3px 0px;\r\n  margin-bottom: 15px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  color: var(--gray);\r\n  @media ${device.mobile} {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  width: 570px;\r\n  border-bottom: 2px solid var(--lightblue);\r\n  margin-bottom: 20px;\r\n  @media ${device.mobile} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const CardsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  padding: 0px 80px;\r\n  @media ${device.mobile} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  display: grid;\r\n  width: 300px;\r\n  grid-template-rows: 210px 80px;\r\n  grid-template-areas: \"text\" \"stats\";\r\n  border-radius: 18px;\r\n  background: var(--white);\r\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.9);\r\n  text-align: center;\r\n  margin: 30px;\r\n\r\n  .card-text {\r\n    grid-area: text;\r\n    margin: 25px;\r\n  }\r\n  .card-text p {\r\n    color: grey;\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n    padding: 10px 10px;\r\n  }\r\n  .card-text h2 {\r\n    margin-top: 10px;\r\n    font-size: 22px;\r\n  }\r\n  .card-stats {\r\n    grid-area: stats;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr;\r\n    border-bottom-left-radius: 15px;\r\n    border-bottom-right-radius: 15px;\r\n    background: var(--lightblue);\r\n  }\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    color: white;\r\n    padding: 10px;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport { IProject } from \"../../services/types\";\r\n\r\ninterface Props {\r\n  projects: IProject[];\r\n}\r\n\r\nconst Project: React.FC<Props> = ({ projects }) => {\r\n  return (\r\n    <S.Container>\r\n      <S.TitleContainer>\r\n        <S.ProjectsTitle>Projects</S.ProjectsTitle>\r\n        <S.Separator />\r\n      </S.TitleContainer>\r\n      <S.CardsContainer>\r\n        {projects.map((project) => (\r\n          <S.Card>\r\n            <div className=\"card-text\">\r\n              <h2>{project.name}</h2>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"card-stats\">\r\n              <a href={project.live} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Live\r\n              </a>\r\n              <a href={project.code} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Code\r\n              </a>\r\n            </div>\r\n          </S.Card>\r\n        ))}\r\n      </S.CardsContainer>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../styles/GlobalStyles\";\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Header = styled.div`\r\n  padding: 40px 80px;\r\n  margin: 0 auto;\r\n  background-color: var(--gray);\r\n  @media ${device.mobile} {\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nexport const UserName = styled.h1`\r\n  font-size: 60px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n  color: var(--darkblue);\r\n  @media ${device.mobile} {\r\n    font-size: 40px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Position = styled.h2`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  letter-spacing: 5px;\r\n  color: var(--darkblue);\r\n  @media ${device.mobile} {\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const AboutMe = styled.div`\r\n  padding: 20px 0px 20px 50px;\r\n  margin: 0 auto;\r\n  background-color: var(--white);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  @media ${device.mobile} {\r\n    padding: 30px;\r\n    padding-bottom: 0px;\r\n  }\r\n`;\r\n\r\nexport const AboutLeft = styled.div`\r\n  min-width: 200px;\r\n  @media ${device.mobile} {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const AboutTitle = styled.h3`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  background-color: var(--darkblue);\r\n  width: 150px;\r\n  padding: 3px 0px;\r\n  margin-bottom: 15px;\r\n  transform: skew(-20deg);\r\n  text-align: center;\r\n  color: var(--gray);\r\n  @media ${device.mobile} {\r\n    margin: 0 auto 10px;\r\n  }\r\n`;\r\n\r\nexport const Email = styled.a`\r\n  padding: 2px 0px;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: var(--black);\r\n`;\r\nexport const Phone = styled.p`\r\n  padding: 2px 0px;\r\n  font-size: 14px;\r\n`;\r\nexport const Location = styled.p`\r\n  padding: 2px 0px;\r\n  font-size: 14px;\r\n`;\r\nexport const Github = styled.a`\r\n  padding: 2px 0px;\r\n  font-size: 30px;\r\n  text-decoration: none;\r\n  color: var(--darkblue);\r\n`;\r\nexport const Linkedin = styled.a`\r\n  padding: 2px 10px;\r\n  font-size: 30px;\r\n  text-decoration: none;\r\n  color: var(--darkblue);\r\n`;\r\n\r\nexport const AboutRight = styled.div`\r\n  @media ${device.mobile} {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  margin: 15px 0px 30px;\r\n  width: 570px;\r\n  border-bottom: 2px solid var(--lightblue);\r\n  position: relative;\r\n  float: right;\r\n  @media ${device.mobile} {\r\n    width: 310px;\r\n  }\r\n`;\r\n\r\nexport const AboutText = styled.p`\r\n  max-width: 550px;\r\n  margin: 20px 20px 20px 0px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media ${device.mobile} {\r\n    max-width: 300px;\r\n    text-align: justify;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport { IUser } from \"../../services/types\";\r\n\r\ninterface Props {\r\n  user: IUser;\r\n}\r\n\r\nconst User: React.FC<Props> = ({ user }) => {\r\n  return (\r\n    <S.Container>\r\n      <S.Header>\r\n        <S.UserName>{user.name}</S.UserName>\r\n        <S.Position>{user.position}</S.Position>\r\n      </S.Header>\r\n      <S.AboutMe>\r\n        <S.AboutLeft>\r\n          <S.AboutTitle>About me</S.AboutTitle>\r\n          <S.Email href={\"mailto:\" + user.email}>{user.email}</S.Email>\r\n          <S.Phone>{user.phone}</S.Phone>\r\n          <S.Location>{user.location}</S.Location>\r\n          <S.Github\r\n            href={user.github}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\r\n          </S.Github>\r\n          <S.Linkedin\r\n            href={user.linkedin}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\r\n          </S.Linkedin>\r\n        </S.AboutLeft>\r\n        <S.AboutRight>\r\n          <S.Separator />\r\n          <S.AboutText>{user.about}</S.AboutText>\r\n          <S.Separator />\r\n        </S.AboutRight>\r\n      </S.AboutMe>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../styles/GlobalStyles\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 50px 20px;\r\n  margin: 0 auto;\r\n  background-color: var(--white);\r\n  position: relative;\r\n  @media ${device.mobile} {\r\n    padding: 0px 30px;\r\n  }\r\n`;\r\n\r\nexport const SpecializationsTitle = styled.h3`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  background-color: var(--darkblue);\r\n  width: 220px;\r\n  padding: 3px 0px;\r\n  margin-bottom: 15px;\r\n  transform: skew(-20deg);\r\n  text-align: center;\r\n  color: var(--gray);\r\n  position: absolute;\r\n  top: -65px;\r\n  @media ${device.mobile} {\r\n    position: unset;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nexport const SpecializationList = styled.ul`\r\n  columns: 2;\r\n  padding: 0px 0px 30px 100px;\r\n  list-style-type: none;\r\n  li {\r\n    padding: 3px 0px;\r\n    @media ${device.mobile} {\r\n      text-align: center;\r\n    }\r\n  }\r\n  @media ${device.mobile} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport { ISpecialization } from \"../../services/types\";\r\n\r\ninterface Props {\r\n  specializations: ISpecialization[];\r\n}\r\n\r\nconst Specialization: React.FC<Props> = ({ specializations }) => {\r\n  return (\r\n    <S.Container>\r\n      <S.SpecializationsTitle>Specializations</S.SpecializationsTitle>\r\n      <S.SpecializationList>\r\n        {specializations.map((specialization) => (\r\n          <li>{specialization}</li>\r\n        ))}\r\n      </S.SpecializationList>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Specialization;\r\n","import React from \"react\";\r\nimport { Grid } from \"./styles\";\r\nimport Project from \"../Project\";\r\nimport User from \"../User\";\r\nimport Specialization from \"../Specialization\";\r\nimport { IUser } from \"../../services/types\";\r\n\r\ninterface Props {\r\n  users: IUser[];\r\n}\r\n\r\nconst Layout: React.FC<Props> = ({ users }) => {\r\n  return (\r\n    <>\r\n      {users.map((user) => (\r\n        <Grid>\r\n          <User key={user.name} user={user} />\r\n          <Specialization\r\n            key={user.projects[1].name}\r\n            specializations={user.specializations}\r\n          />\r\n          <Project key={user.projects[0].name} projects={user.projects} />\r\n        </Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport Layout from \"./components/Layout\";\nimport { IUser } from \"./services/types\";\n\nfunction App() {\n  const [users, setUsers] = useState<IUser[]>([]);\n\n  useEffect(() => {\n    api.get<IUser[]>(\"/users\").then((response) => {\n      setUsers(response.data);\n    });\n  }, []);\n\n  return (\n    <>\n      <Layout users={users} />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}